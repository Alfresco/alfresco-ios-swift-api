//
// NetworksAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class NetworksAPI {
    /**
     Get a network
     
     - parameter networkId: (path) The identifier of a network. 
     - parameter fields: (query) A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getNetwork(networkId: String, fields: [String]? = nil, completion: @escaping ((_ data: PersonNetworkEntry?,_ error: Error?) -> Void)) {
        getNetworkWithRequestBuilder(networkId: networkId, fields: fields).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get a network
     - GET /alfresco/versions/1/networks/{networkId}
     - Gets information for a network **networkId**.
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "entry" : {
    "createdAt" : "2000-01-23T04:56:07.000+00:00",
    "paidNetwork" : true,
    "subscriptionLevel" : "Free",
    "quotas" : [ {
      "usage" : 6,
      "limit" : 0,
      "id" : "id"
    }, {
      "usage" : 6,
      "limit" : 0,
      "id" : "id"
    } ],
    "isEnabled" : true,
    "id" : "id",
    "homeNetwork" : true
  }
}}]
     
     - parameter networkId: (path) The identifier of a network. 
     - parameter fields: (query) A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)

     - returns: RequestBuilder<PersonNetworkEntry> 
     */
    open class func getNetworkWithRequestBuilder(networkId: String, fields: [String]? = nil) -> RequestBuilder<PersonNetworkEntry> {
        var path = "/alfresco/versions/1/networks/{networkId}"
        let networkIdPreEscape = "\(networkId)"
        let networkIdPostEscape = networkIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{networkId}", with: networkIdPostEscape, options: .literal, range: nil)
        let URLString = AlfrescoContentServicesAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields": fields
        ])

        let requestBuilder: RequestBuilder<PersonNetworkEntry>.Type = AlfrescoContentServicesAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get network information
     
     - parameter personId: (path) The identifier of a person. 
     - parameter networkId: (path) The identifier of a network. 
     - parameter fields: (query) A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getNetworkForPerson(personId: String, networkId: String, fields: [String]? = nil, completion: @escaping ((_ data: PersonNetworkEntry?,_ error: Error?) -> Void)) {
        getNetworkForPersonWithRequestBuilder(personId: personId, networkId: networkId, fields: fields).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get network information
     - GET /alfresco/versions/1/people/{personId}/networks/{networkId}
     - Gets network information on a single network specified by **networkId** for **personId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user. 
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "entry" : {
    "createdAt" : "2000-01-23T04:56:07.000+00:00",
    "paidNetwork" : true,
    "subscriptionLevel" : "Free",
    "quotas" : [ {
      "usage" : 6,
      "limit" : 0,
      "id" : "id"
    }, {
      "usage" : 6,
      "limit" : 0,
      "id" : "id"
    } ],
    "isEnabled" : true,
    "id" : "id",
    "homeNetwork" : true
  }
}}]
     
     - parameter personId: (path) The identifier of a person. 
     - parameter networkId: (path) The identifier of a network. 
     - parameter fields: (query) A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)

     - returns: RequestBuilder<PersonNetworkEntry> 
     */
    open class func getNetworkForPersonWithRequestBuilder(personId: String, networkId: String, fields: [String]? = nil) -> RequestBuilder<PersonNetworkEntry> {
        var path = "/alfresco/versions/1/people/{personId}/networks/{networkId}"
        let personIdPreEscape = "\(personId)"
        let personIdPostEscape = personIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{personId}", with: personIdPostEscape, options: .literal, range: nil)
        let networkIdPreEscape = "\(networkId)"
        let networkIdPostEscape = networkIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{networkId}", with: networkIdPostEscape, options: .literal, range: nil)
        let URLString = AlfrescoContentServicesAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields": fields
        ])

        let requestBuilder: RequestBuilder<PersonNetworkEntry>.Type = AlfrescoContentServicesAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     List network membership
     
     - parameter personId: (path) The identifier of a person. 
     - parameter skipCount: (query) The number of entities that exist in the collection before those included in this list.  If not supplied then the default value is 0.  (optional, default to 0)
     - parameter maxItems: (query) The maximum number of items to return in the list.  If not supplied then the default value is 100.  (optional, default to 100)
     - parameter fields: (query) A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listNetworksForPerson(personId: String, skipCount: Int? = nil, maxItems: Int? = nil, fields: [String]? = nil, completion: @escaping ((_ data: PersonNetworkPaging?,_ error: Error?) -> Void)) {
        listNetworksForPersonWithRequestBuilder(personId: personId, skipCount: skipCount, maxItems: maxItems, fields: fields).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     List network membership
     - GET /alfresco/versions/1/people/{personId}/networks
     - Gets a list of network memberships for person **personId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user. 
     - BASIC:
       - type: basic
       - name: basicAuth
     - examples: [{contentType=application/json, example={
  "list" : {
    "entries" : [ {
      "entry" : {
        "createdAt" : "2000-01-23T04:56:07.000+00:00",
        "paidNetwork" : true,
        "subscriptionLevel" : "Free",
        "quotas" : [ {
          "usage" : 6,
          "limit" : 0,
          "id" : "id"
        }, {
          "usage" : 6,
          "limit" : 0,
          "id" : "id"
        } ],
        "isEnabled" : true,
        "id" : "id",
        "homeNetwork" : true
      }
    }, {
      "entry" : {
        "createdAt" : "2000-01-23T04:56:07.000+00:00",
        "paidNetwork" : true,
        "subscriptionLevel" : "Free",
        "quotas" : [ {
          "usage" : 6,
          "limit" : 0,
          "id" : "id"
        }, {
          "usage" : 6,
          "limit" : 0,
          "id" : "id"
        } ],
        "isEnabled" : true,
        "id" : "id",
        "homeNetwork" : true
      }
    } ],
    "pagination" : {
      "maxItems" : 5,
      "hasMoreItems" : true,
      "totalItems" : 6,
      "count" : 0,
      "skipCount" : 1
    }
  }
}}]
     
     - parameter personId: (path) The identifier of a person. 
     - parameter skipCount: (query) The number of entities that exist in the collection before those included in this list.  If not supplied then the default value is 0.  (optional, default to 0)
     - parameter maxItems: (query) The maximum number of items to return in the list.  If not supplied then the default value is 100.  (optional, default to 100)
     - parameter fields: (query) A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)

     - returns: RequestBuilder<PersonNetworkPaging> 
     */
    open class func listNetworksForPersonWithRequestBuilder(personId: String, skipCount: Int? = nil, maxItems: Int? = nil, fields: [String]? = nil) -> RequestBuilder<PersonNetworkPaging> {
        var path = "/alfresco/versions/1/people/{personId}/networks"
        let personIdPreEscape = "\(personId)"
        let personIdPostEscape = personIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{personId}", with: personIdPostEscape, options: .literal, range: nil)
        let URLString = AlfrescoContentServicesAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "skipCount": skipCount?.encodeToJSON(), 
            "maxItems": maxItems?.encodeToJSON(), 
            "fields": fields
        ])

        let requestBuilder: RequestBuilder<PersonNetworkPaging>.Type = AlfrescoContentServicesAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
